{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lowka\\\\OneDrive\\\\Desktop\\\\web dev\\\\FinalProject_starterCode-CSCI39548\\\\src\\\\components\\\\containers\\\\EditCampusContainer.js\";\n/*==================================================\r\nEditCampusContainer.js\r\n\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk, fetchCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass EditCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description,\n        imageURL: this.state.imageURL,\n        id: this.state.campusId\n      };\n      let newCampus = await this.props.editCampus(campus);\n      console.log(newCampus);\n      this.setState({\n        name: '',\n        imageURL: '',\n        address: '',\n        description: '',\n        redirect: true,\n        redirectId: this.state.campusId\n      });\n    };\n    this.state = {\n      campus: this.props.campus,\n      campusId: this.props.match.params.id,\n      redirect: false,\n      redirectId: null\n    };\n  }\n  componentDidMount() {\n    //getting campus ID \n    this.props.fetchCampus(this.state.campusId);\n  }\n\n  //change state values based on user input\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditCampusView, {\n        campusInfo: this.state,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nconst mapState = state => {\n  return {\n    campus: state.campus\n  };\n};\nconst mapDispatch = dispatch => {\n  return {\n    fetchCampus: id => dispatch(fetchCampusThunk(id)),\n    editCampus: campus => dispatch(editCampusThunk(campus))\n  };\n};\nEditCampusContainer.propTypes = {\n  fetchCampus: PropTypes.func.isRequired,\n  editCampus: PropTypes.func.isRequired\n};\nexport default connect(mapState, mapDispatch)(EditCampusContainer);","map":{"version":3,"names":["Component","connect","Redirect","PropTypes","Header","EditCampusView","editCampusThunk","fetchCampusThunk","EditCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","campus","state","address","description","imageURL","id","campusId","newCampus","editCampus","console","log","redirect","redirectId","match","params","componentDidMount","fetchCampus","componentWillUnmount","render","mapState","mapDispatch","dispatch","propTypes","func","isRequired"],"sources":["C:/Users/lowka/OneDrive/Desktop/web dev/FinalProject_starterCode-CSCI39548/src/components/containers/EditCampusContainer.js"],"sourcesContent":["/*==================================================\r\nEditCampusContainer.js\r\n\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Header from './Header'\r\n\r\nimport EditCampusView from '../views/EditCampusView'\r\nimport { editCampusThunk, fetchCampusThunk } from '../../store/thunks'\r\n\r\nclass EditCampusContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      campus: this.props.campus,\r\n      campusId: this.props.match.params.id,\r\n      redirect: false,\r\n      redirectId: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //getting campus ID \r\n    this.props.fetchCampus(this.state.campusId)\r\n  }\r\n\r\n  //change state values based on user input\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  // handle the submission\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    let campus = {\r\n      name: this.state.name,\r\n      address: this.state.address,\r\n      description: this.state.description,\r\n      imageURL: this.state.imageURL,\r\n      id: this.state.campusId,\r\n    }\r\n\r\n    let newCampus = await this.props.editCampus(campus)\r\n    console.log(newCampus)\r\n    this.setState({\r\n      name: '',\r\n      imageURL: '',\r\n      address: '',\r\n      description: '',\r\n      redirect: true,\r\n      redirectId: this.state.campusId,\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ redirect: false, redirectId: null })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={`/campus/${this.state.redirectId}`} />\r\n    }\r\n    return (\r\n      <>\r\n        {/*Render the view of the Edit Campus*/}\r\n        <Header />\r\n        <EditCampusView\r\n          campusInfo={this.state}\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    campus: state.campus,\r\n  }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\r\n    editCampus: (campus) => dispatch(editCampusThunk(campus)),\r\n  }\r\n}\r\n\r\nEditCampusContainer.propTypes = {\r\n  fetchCampus: PropTypes.func.isRequired,\r\n  editCampus: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(EditCampusContainer)"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,eAAe,EAAEC,gBAAgB,QAAQ,oBAAoB;AAAA;AAAA;AAEtE,MAAMC,mBAAmB,SAASR,SAAS,CAAC;EAC1CS,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAA,KAedC,YAAY,GAAIC,KAAK,IAAK;MACxB,IAAI,CAACC,QAAQ,CAAC;QACZ,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,GAAGH,KAAK,CAACE,MAAM,CAACE;MACpC,CAAC,CAAC;IACJ,CAAC;IAAA,KAGDC,YAAY,GAAG,MAAOL,KAAK,IAAK;MAC9BA,KAAK,CAACM,cAAc,EAAE;MACtB,IAAIC,MAAM,GAAG;QACXJ,IAAI,EAAE,IAAI,CAACK,KAAK,CAACL,IAAI;QACrBM,OAAO,EAAE,IAAI,CAACD,KAAK,CAACC,OAAO;QAC3BC,WAAW,EAAE,IAAI,CAACF,KAAK,CAACE,WAAW;QACnCC,QAAQ,EAAE,IAAI,CAACH,KAAK,CAACG,QAAQ;QAC7BC,EAAE,EAAE,IAAI,CAACJ,KAAK,CAACK;MACjB,CAAC;MAED,IAAIC,SAAS,GAAG,MAAM,IAAI,CAAChB,KAAK,CAACiB,UAAU,CAACR,MAAM,CAAC;MACnDS,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;MACtB,IAAI,CAACb,QAAQ,CAAC;QACZE,IAAI,EAAE,EAAE;QACRQ,QAAQ,EAAE,EAAE;QACZF,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE,EAAE;QACfQ,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE,IAAI,CAACX,KAAK,CAACK;MACzB,CAAC,CAAC;IACJ,CAAC;IAzCC,IAAI,CAACL,KAAK,GAAG;MACXD,MAAM,EAAE,IAAI,CAACT,KAAK,CAACS,MAAM;MACzBM,QAAQ,EAAE,IAAI,CAACf,KAAK,CAACsB,KAAK,CAACC,MAAM,CAACT,EAAE;MACpCM,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE;IACd,CAAC;EACH;EAEAG,iBAAiB,GAAG;IAClB;IACA,IAAI,CAACxB,KAAK,CAACyB,WAAW,CAAC,IAAI,CAACf,KAAK,CAACK,QAAQ,CAAC;EAC7C;;EAEA;;EA8BAW,oBAAoB,GAAG;IACrB,IAAI,CAACvB,QAAQ,CAAC;MAAEiB,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAK,CAAC,CAAC;EACtD;EAEAM,MAAM,GAAG;IACP,IAAI,IAAI,CAACjB,KAAK,CAACU,QAAQ,EAAE;MACvB,oBAAO,QAAC,QAAQ;QAAC,EAAE,EAAG,WAAU,IAAI,CAACV,KAAK,CAACW,UAAW;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAC7D;IACA,oBACE;MAAA,wBAEE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,cAAc;QACb,UAAU,EAAE,IAAI,CAACX,KAAM;QACvB,YAAY,EAAE,IAAI,CAACT,YAAa;QAChC,YAAY,EAAE,IAAI,CAACM;MAAa;QAAA;QAAA;QAAA;MAAA,QAChC;IAAA,gBACD;EAEP;AACF;AAEA,MAAMqB,QAAQ,GAAIlB,KAAK,IAAK;EAC1B,OAAO;IACLD,MAAM,EAAEC,KAAK,CAACD;EAChB,CAAC;AACH,CAAC;AAED,MAAMoB,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLL,WAAW,EAAGX,EAAE,IAAKgB,QAAQ,CAACjC,gBAAgB,CAACiB,EAAE,CAAC,CAAC;IACnDG,UAAU,EAAGR,MAAM,IAAKqB,QAAQ,CAAClC,eAAe,CAACa,MAAM,CAAC;EAC1D,CAAC;AACH,CAAC;AAEDX,mBAAmB,CAACiC,SAAS,GAAG;EAC9BN,WAAW,EAAEhC,SAAS,CAACuC,IAAI,CAACC,UAAU;EACtChB,UAAU,EAAExB,SAAS,CAACuC,IAAI,CAACC;AAC7B,CAAC;AAED,eAAe1C,OAAO,CAACqC,QAAQ,EAAEC,WAAW,CAAC,CAAC/B,mBAAmB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}