{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lowka\\\\OneDrive\\\\Desktop\\\\web dev\\\\FinalProject_starterCode-CSCI39548\\\\src\\\\components\\\\views\\\\CampusView.js\";\n/*==================================================\r\nCampusView.js\r\n\r\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\r\nIt constructs a React component to display a single campus and its students (if any).\r\n================================================== */\nimport { Link } from \"react-router-dom\";\n\n// Take in props data to construct the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampusView = props => {\n  const {\n    campus\n  } = props;\n\n  // Render a single Campus view with list of its students\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), \" \", campus.students.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/editcampus/${campus.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit campus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Students: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), campus.students.map(student => {\n        let name = student.firstname + \" \" + student.lastname;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/student/${student.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, student.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" There are no students currently at this campus \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/newstudent`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add New Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = CampusView;\nexport default CampusView;\nvar _c;\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"names":["Link","CampusView","props","campus","name","address","description","students","length","id","map","student","firstname","lastname"],"sources":["C:/Users/lowka/OneDrive/Desktop/web dev/FinalProject_starterCode-CSCI39548/src/components/views/CampusView.js"],"sourcesContent":["/*==================================================\r\nCampusView.js\r\n\r\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\r\nIt constructs a React component to display a single campus and its students (if any).\r\n================================================== */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Take in props data to construct the component\r\nconst CampusView = (props) => {\r\n  const {campus} = props;\r\n\r\n  // Render a single Campus view with list of its students\r\n  return (\r\n    <div>\r\n      \r\n      \r\n      <h1>{campus.name}</h1>\r\n      <p>{campus.address}</p>\r\n      <p>{campus.description}</p> {campus.students.length !== 0 ?\r\n      <div>\r\n        <Link to={`/editcampus/${campus.id}`}>\r\n          <button>Edit campus</button>\r\n        </Link>\r\n      <h3> Students: </h3> \r\n      {campus.students.map( student => {\r\n        let name = student.firstname + \" \" + student.lastname;\r\n        return (\r\n          <div key={student.id}>\r\n            <Link to={`/student/${student.id}`}>\r\n              <h2>{name}</h2>\r\n            </Link> \r\n           \r\n          </div>\r\n        );\r\n      })}\r\n            </div>\r\n            :\r\n            <p> There are no students currently at this campus </p> \r\n      }\r\n       <br/>\r\n      <Link to={`/newstudent`}>\r\n        <button>Add New Student</button>\r\n      </Link>\r\n      <br/><br/>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampusView;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAI,QAAQ,kBAAkB;;AAEvC;AAAA;AACA,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAACC;EAAM,CAAC,GAAGD,KAAK;;EAEtB;EACA,oBACE;IAAA,wBAGE;MAAA,UAAKC,MAAM,CAACC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA,UAAID,MAAM,CAACE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eACvB;MAAA,UAAIF,MAAM,CAACG;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,OAAEH,MAAM,CAACI,QAAQ,CAACC,MAAM,KAAK,CAAC,gBACzD;MAAA,wBACE,QAAC,IAAI;QAAC,EAAE,EAAG,eAAcL,MAAM,CAACM,EAAG,EAAE;QAAA,uBACnC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAA4B;QAAA;QAAA;QAAA;MAAA,QACvB,eACT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,EACnBN,MAAM,CAACI,QAAQ,CAACG,GAAG,CAAEC,OAAO,IAAI;QAC/B,IAAIP,IAAI,GAAGO,OAAO,CAACC,SAAS,GAAG,GAAG,GAAGD,OAAO,CAACE,QAAQ;QACrD,oBACE;UAAA,uBACE,QAAC,IAAI;YAAC,EAAE,EAAG,YAAWF,OAAO,CAACF,EAAG,EAAE;YAAA,uBACjC;cAAA,UAAKL;YAAI;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA;QACV,GAHCO,OAAO,CAACF,EAAE;UAAA;UAAA;UAAA;QAAA,QAKd;MAEV,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACU,gBAEN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuD,eAE5D;MAAA;MAAA;MAAA;IAAA,QAAK,eACN,QAAC,IAAI;MAAC,EAAE,EAAG,aAAa;MAAA,uBACtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgC;MAAA;MAAA;MAAA;IAAA,QAC3B,eACP;MAAA;MAAA;MAAA;IAAA,QAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAEN;AAEV,CAAC;AAAC,KAvCIR,UAAU;AAyChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}